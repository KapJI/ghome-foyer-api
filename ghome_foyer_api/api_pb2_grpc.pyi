"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
This file contains the following services:

HomeControlService
  - GetAssistantRoutines

StructuresService
  - GetHomeGraph

HomeDevicesService
  - GetAssistantDeviceSettings
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from ghome_foyer_api.api_pb2 import (
    GetAssistantDeviceSettingsRequest,
    GetAssistantDeviceSettingsResponse,
    GetAssistantRoutinesRequest,
    GetAssistantRoutinesResponse,
    GetHomeGraphRequest,
    GetHomeGraphResponse,
    UpdateAssistantDeviceSettingsRequest,
    UpdateAssistantDeviceSettingsResponse,
)
# Manually commented to fix mypy errors.
# from grpc import (
#     Channel,
#     Server,
#     ServicerContext,
#     UnaryStreamMultiCallable,
#     UnaryUnaryMultiCallable,
# )
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryStreamMultiCallable,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...

class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore[misc, type-arg]
    ...

class HomeControlServiceStub:
    """Home Control Service"""

    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetAssistantRoutines: UnaryStreamMultiCallable[
        GetAssistantRoutinesRequest,
        GetAssistantRoutinesResponse,
    ]

class HomeControlServiceAsyncStub:
    """Home Control Service"""

    GetAssistantRoutines: UnaryStreamMultiCallable[
        GetAssistantRoutinesRequest,
        GetAssistantRoutinesResponse,
    ]

class HomeControlServiceServicer(metaclass=ABCMeta):
    """Home Control Service"""

    @abstractmethod
    def GetAssistantRoutines(
        self,
        request: GetAssistantRoutinesRequest,
        context: _ServicerContext,
    ) -> Union[Iterator[GetAssistantRoutinesResponse], AsyncIterator[GetAssistantRoutinesResponse]]: ...

def add_HomeControlServiceServicer_to_server(servicer: HomeControlServiceServicer, server: Union[Server, Server]) -> None: ...

class StructuresServiceStub:
    """Structure Service"""

    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetHomeGraph: UnaryUnaryMultiCallable[
        GetHomeGraphRequest,
        GetHomeGraphResponse,
    ]

class StructuresServiceAsyncStub:
    """Structure Service"""

    GetHomeGraph: UnaryUnaryMultiCallable[
        GetHomeGraphRequest,
        GetHomeGraphResponse,
    ]

class StructuresServiceServicer(metaclass=ABCMeta):
    """Structure Service"""

    @abstractmethod
    def GetHomeGraph(
        self,
        request: GetHomeGraphRequest,
        context: _ServicerContext,
    ) -> Union[GetHomeGraphResponse, Awaitable[GetHomeGraphResponse]]: ...

def add_StructuresServiceServicer_to_server(servicer: StructuresServiceServicer, server: Union[Server, Server]) -> None: ...

class HomeDevicesServiceStub:
    """Home Devices Service"""

    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetAssistantDeviceSettings: UnaryStreamMultiCallable[
        GetAssistantDeviceSettingsRequest,
        GetAssistantDeviceSettingsResponse,
    ]

    UpdateAssistantDeviceSettings: UnaryStreamMultiCallable[
        UpdateAssistantDeviceSettingsRequest,
        UpdateAssistantDeviceSettingsResponse,
    ]

class HomeDevicesServiceAsyncStub:
    """Home Devices Service"""

    GetAssistantDeviceSettings: UnaryStreamMultiCallable[
        GetAssistantDeviceSettingsRequest,
        GetAssistantDeviceSettingsResponse,
    ]

    UpdateAssistantDeviceSettings: UnaryStreamMultiCallable[
        UpdateAssistantDeviceSettingsRequest,
        UpdateAssistantDeviceSettingsResponse,
    ]

class HomeDevicesServiceServicer(metaclass=ABCMeta):
    """Home Devices Service"""

    @abstractmethod
    def GetAssistantDeviceSettings(
        self,
        request: GetAssistantDeviceSettingsRequest,
        context: _ServicerContext,
    ) -> Union[Iterator[GetAssistantDeviceSettingsResponse], AsyncIterator[GetAssistantDeviceSettingsResponse]]: ...

    @abstractmethod
    def UpdateAssistantDeviceSettings(
        self,
        request: UpdateAssistantDeviceSettingsRequest,
        context: _ServicerContext,
    ) -> Union[Iterator[UpdateAssistantDeviceSettingsResponse], AsyncIterator[UpdateAssistantDeviceSettingsResponse]]: ...

def add_HomeDevicesServiceServicer_to_server(servicer: HomeDevicesServiceServicer, server: Union[Server, Server]) -> None: ...
